@using Chef.Master.Host
@using Microsoft.AspNetCore.Html
@using Microsoft.Extensions.Options
@using Chef.Master.Interfaces
@model Chef.Master.ViewModel.StatusViewModel;
@inject IOptions<MyBuildConfiguration> MyBuildConfiguration
@inject IEnumerable<IRecipeAdapter> Adapters
@{
    ViewData["Title"] = "Home Page";
}

@{
    Func<dynamic, IHtmlContent> StatusIndicator(string name, bool success)
    {
        if (success)
        {
            return (@<div class="status status-success" role="alert">&#10004; @name</div>);
        }

        return (@<div class="status status-failure" role="alert">&#x274C; @name</div>);
    }
}

<link
    rel="stylesheet"
    href="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css"
    integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm"
    crossorigin="anonymous"
>
<link rel="stylesheet" href="~/css/index.css"/>
<br/>
<div class="container">
    <div>
        @using (Html.BeginForm("Process", "Home", FormMethod.Post))
        {
            <div class="row">
                <div class="col-lg-12 centered">
                    <h2>Chef Master</h2>
                </div>
            </div>
            <div class="row justify-content-sm-center">
                <div class="col-lg-2">&nbsp;</div>
                <div class="col-lg-8">
                    <input type="text" class="form-control" name="url" value="@Model?.Url">
                    <small class="form-text text-muted">Put a web site link here and I will try to get the recipe from it.</small>
                    <input type="text" class="form-control" name="customImageUrl" value="@Model?.CustomImageUrl">
                    <small class="form-text text-muted">Custom image URL (if required).</small>
                </div>
                <div class="col-lg-2">&nbsp;</div>
            </div>
            <div class="row">&nbsp;</div>
            <input type="hidden" name="lastmodelindex" value="@Model?.LastModelIndex"/>
            <div class="row justify-content-evenly">
                <div class="col-lg-2"></div>
                <div class="col-lg-4 col-md-12" align="center">
                    <div class="card" style="width: 18rem">
                        <img class="card-img-top" src="~/img/modern.PNG"/>
                        <div class="card-body">
                            @Html.RadioButton("style", "Modern", true)
                            @Html.Label("style", "Modern")
                        </div>
                    </div>
                </div>
                <div class="col-lg-4 col-md-12" align="center">
                    <div class="card" style="width: 18rem;">
                        <img class="card-img-top" src="~/img/womens-weekly.PNG"/>
                        <div class="card-body">
                            @Html.RadioButton("style", "WomensWeekly", false)
                            @Html.Label("style", "Women's Weekly")
                        </div>
                    </div>
                </div>
                <div class="col-lg-2"></div>
            </div>
            @if (Model != null)
            {
                @if (!string.IsNullOrEmpty(Model.ConfirmationMessage))
                {
                    <div class="rounded-form">
                        <div class="row">
                            <div class="col-sm-12">&nbsp;
                                <h6 class="text-danger">@Model.Message</h6>
                                <h4 class="text-info">@Model.ConfirmationMessage</h4>
                            </div>
                        </div>
                        <div class="row"></div>&nbsp;
                        <div class="row">
                            <div class="col-sm-5">&nbsp;</div>
                            <div class="col-sm-2">
                                <input class="btn btn-block btn-success" type="submit" value="Retry">
                            </div>
                            <div class="col-sm-5">&nbsp;</div>
                        </div>
                    </div>
                }
                else
                {
                    <div class="row">&nbsp;</div>
                    <div class="row justify-content-sm-center">
                        <div class="col-sm-3">&nbsp;</div>
                        <div class="col-md-6 centered">
                            <div class="alert alert-danger" role="alert">
                                @Model?.Message
                            </div>
                        </div>
                        <div class="col-sm-3">&nbsp;</div>
                    </div>
                    <div class="row justify-content-sm-center">
                        <div class="col-sm-5">&nbsp;</div>
                        <div class="col-sm-2">
                            @StatusIndicator("Can connect", Model.Stages.CanConnect)(null)
                            @StatusIndicator("Can find", Model.Stages.CanFind)(null)
                            @StatusIndicator("Can interpret", Model.Stages.CanInterpret)(null)
                            @StatusIndicator("Can convert", Model.Stages.CanConvert)(null)
                        </div>
                        <div class="col-sm-5">&nbsp;</div>
                    </div>
                }
            }
            else
            {
                <div class="row">&nbsp;</div>
                <div class="row justify-content-sm-center">
                    <div class="col-lg-5">&nbsp;</div>
                    <div class="col-lg-2 col-md-12">
                        <input class="btn btn-block btn-outline-success" type="submit" value="Go">
                    </div>
                    <div class="col-lg-5">&nbsp;</div>
                </div>
            }

            <div class="row justify-content-sm-center" style="padding-top: 10px;">
                <div class="col-lg-5">&nbsp;</div>
                <div class="col-lg-2 col-md-12">
                    @Html.ActionLink(
                        "Start over",
                        "Reset",
                        "Home",
                        null,
                        new { @class = "btn btn-block btn-outline-info" }
                    )
                </div>
                <div class="col-lg-5">&nbsp;</div>
            </div>
            <div class="line-break"/>
            <footer style="padding-top: 20px;">
                <div class="row align-items-start justify-content-center">
                    <div class="col-sm-3">&nbsp;</div>
                    <div class="col-sm-3">
                        <p class="text-secondary">
                            <small>Registered adapters:</small>
                        </p>
                        <ul>
                            @foreach (var adapter in Adapters)
                            {
                                <li>
                                    <small>
                                        <a class="text-info" href="@adapter.Metadata.Url" target="_blank">
                                            @adapter.Metadata.Name
                                        </a>
                                    </small>
                                </li>
                            }
                        </ul>
                    </div>
                    <div class="col-sm-3">&nbsp;
                        <p class="text-info" style="text-align: right">
                            <i>
                                <small>
                                    Build @MyBuildConfiguration.Value.MyBuildNumber
                                </small>
                            </i>
                        </p>
                    </div>
                    <div class="col-sm-3">&nbsp;</div>
                </div>
            </footer>
        }
    </div>
</div>
